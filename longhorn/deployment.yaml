apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: longhorn
    app.kubernetes.io/name: longhorn
    app.kubernetes.io/version: v1.4.1
  name: longhorn-driver-deployer
  namespace: longhorn-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: longhorn-driver-deployer
  template:
    metadata:
      labels:
        app: longhorn-driver-deployer
        app.kubernetes.io/instance: longhorn
        app.kubernetes.io/name: longhorn
        app.kubernetes.io/version: v1.4.1
    spec:
      nodeSelector:
        os-arch-bit: "64"
      containers:
        - command:
            - longhorn-manager
            - -d
            - deploy-driver
            - --manager-image
            - longhornio/longhorn-manager:v1.4.1
            - --manager-url
            - http://longhorn-backend:9500/v1
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: SERVICE_ACCOUNT
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: CSI_ATTACHER_IMAGE
              value: longhornio/csi-attacher:v3.4.0
            - name: CSI_PROVISIONER_IMAGE
              value: longhornio/csi-provisioner:v2.1.2
            - name: CSI_NODE_DRIVER_REGISTRAR_IMAGE
              value: longhornio/csi-node-driver-registrar:v2.5.0
            - name: CSI_RESIZER_IMAGE
              value: longhornio/csi-resizer:v1.3.0
            - name: CSI_SNAPSHOTTER_IMAGE
              value: longhornio/csi-snapshotter:v5.0.1
            - name: CSI_LIVENESS_PROBE_IMAGE
              value: longhornio/livenessprobe:v2.8.0
          image: longhornio/longhorn-manager:v1.4.1
          imagePullPolicy: IfNotPresent
          name: longhorn-driver-deployer
      initContainers:
        - command:
            - sh
            - -c
            - while [ $(curl -m 1 -s -o /dev/null -w "%{http_code}" http://longhorn-backend:9500/v1) != "200" ]; do echo waiting; sleep 2; done
          image: longhornio/longhorn-manager:v1.4.1
          name: wait-longhorn-manager
      securityContext:
        runAsUser: 0
      serviceAccountName: longhorn-service-account
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: longhorn-recovery-backend
    app.kubernetes.io/instance: longhorn
    app.kubernetes.io/name: longhorn
    app.kubernetes.io/version: v1.4.1
  name: longhorn-recovery-backend
  namespace: longhorn-system
spec:
  replicas: 2
  selector:
    matchLabels:
      app: longhorn-recovery-backend
  template:
    metadata:
      labels:
        app: longhorn-recovery-backend
        app.kubernetes.io/instance: longhorn
        app.kubernetes.io/name: longhorn
        app.kubernetes.io/version: v1.4.1
    spec:
      nodeSelector:
        os-arch-bit: "64"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - longhorn-recovery-backend
                topologyKey: kubernetes.io/hostname
              weight: 1
      containers:
        - command:
            - longhorn-manager
            - recovery-backend
            - --service-account
            - longhorn-service-account
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          image: longhornio/longhorn-manager:v1.4.1
          imagePullPolicy: IfNotPresent
          name: longhorn-recovery-backend
          ports:
            - containerPort: 9600
              name: recov-backend
          readinessProbe:
            initialDelaySeconds: 3
            periodSeconds: 5
            tcpSocket:
              port: 9600
          securityContext:
            runAsUser: 2000
      serviceAccountName: longhorn-service-account
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: longhorn-ui
    app.kubernetes.io/instance: longhorn
    app.kubernetes.io/name: longhorn
    app.kubernetes.io/version: v1.4.1
  name: longhorn-ui
  namespace: longhorn-system
spec:
  replicas: 2
  selector:
    matchLabels:
      app: longhorn-ui
  template:
    metadata:
      labels:
        app: longhorn-ui
        app.kubernetes.io/instance: longhorn
        app.kubernetes.io/name: longhorn
        app.kubernetes.io/version: v1.4.1
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - longhorn-ui
                topologyKey: kubernetes.io/hostname
              weight: 1
      containers:
        - env:
            - name: LONGHORN_MANAGER_IP
              value: http://longhorn-backend:9500
            - name: LONGHORN_UI_PORT
              value: "8000"
          image: longhornio/longhorn-ui:v1.4.1
          imagePullPolicy: IfNotPresent
          name: longhorn-ui
          ports:
            - containerPort: 8000
              name: http
          volumeMounts:
            - mountPath: /var/cache/nginx/
              name: nginx-cache
            - mountPath: /var/config/nginx/
              name: nginx-config
            - mountPath: /var/run/
              name: var-run
      volumes:
        - emptyDir: {}
          name: nginx-cache
        - emptyDir: {}
          name: nginx-config
        - emptyDir: {}
          name: var-run
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: longhorn-conversion-webhook
    app.kubernetes.io/instance: longhorn
    app.kubernetes.io/name: longhorn
    app.kubernetes.io/version: v1.4.1
  name: longhorn-conversion-webhook
  namespace: longhorn-system
spec:
  replicas: 2
  selector:
    matchLabels:
      app: longhorn-conversion-webhook
  template:
    metadata:
      labels:
        app: longhorn-conversion-webhook
        app.kubernetes.io/instance: longhorn
        app.kubernetes.io/name: longhorn
        app.kubernetes.io/version: v1.4.1
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - longhorn-conversion-webhook
                topologyKey: kubernetes.io/hostname
              weight: 1
      containers:
        - command:
            - longhorn-manager
            - conversion-webhook
            - --service-account
            - longhorn-service-account
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          image: longhornio/longhorn-manager:v1.4.1
          imagePullPolicy: IfNotPresent
          name: longhorn-conversion-webhook
          ports:
            - containerPort: 9443
              name: conversion-wh
          readinessProbe:
            tcpSocket:
              port: 9443
          securityContext:
            runAsUser: 2000
      serviceAccountName: longhorn-service-account
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: longhorn-admission-webhook
    app.kubernetes.io/instance: longhorn
    app.kubernetes.io/name: longhorn
    app.kubernetes.io/version: v1.4.1
  name: longhorn-admission-webhook
  namespace: longhorn-system
spec:
  replicas: 2
  selector:
    matchLabels:
      app: longhorn-admission-webhook
  template:
    metadata:
      labels:
        app: longhorn-admission-webhook
        app.kubernetes.io/instance: longhorn
        app.kubernetes.io/name: longhorn
        app.kubernetes.io/version: v1.4.1
    spec:
      nodeSelector:
        os-arch-bit: "64"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - longhorn-admission-webhook
                topologyKey: kubernetes.io/hostname
              weight: 1
      containers:
        - command:
            - longhorn-manager
            - admission-webhook
            - --service-account
            - longhorn-service-account
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          image: longhornio/longhorn-manager:v1.4.1
          imagePullPolicy: IfNotPresent
          name: longhorn-admission-webhook
          ports:
            - containerPort: 9443
              name: admission-wh
          readinessProbe:
            tcpSocket:
              port: 9443
          securityContext:
            runAsUser: 2000
      initContainers:
        - command:
            - sh
            - -c
            - while [ $(curl -m 1 -s -o /dev/null -w "%{http_code}" -k https://longhorn-conversion-webhook:9443/v1/healthz) != "200" ]; do echo waiting; sleep 2; done
          image: longhornio/longhorn-manager:v1.4.1
          imagePullPolicy: IfNotPresent
          name: wait-longhorn-conversion-webhook
          securityContext:
            runAsUser: 2000
      serviceAccountName: longhorn-service-account
