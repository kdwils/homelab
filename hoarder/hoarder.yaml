apiVersion: v1
kind: Service
metadata:
  name: web
  namespace: hoarder
spec:
  selector:
    app: hoarder
    tier: web
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
  namespace: hoarder
spec:
  selector:
    matchLabels:
      app: hoarder
      tier: web
  replicas: 1
  template:
    metadata:
      labels:
        app: hoarder
        tier: web
    spec:
      nodeSelector:
        kubernetes.io/arch: "amd64"
      containers:
        - name: web
          image: hoarder-web
          ports:
            - containerPort: 3000
          volumeMounts:
            - name: data
              mountPath: /data
          envFrom:
            - configMapRef:
                name: hoarder-config
            - secretRef:
                name: hoarder-secrets
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: data
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: hoarder
spec:
  selector:
    app: hoarder
    tier: redis
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: hoarder
spec:
  selector:
    matchLabels:
      app: hoarder
      tier: redis
  replicas: 1
  template:
    metadata:
      labels:
        app: hoarder
        tier: redis
    spec:
      containers:
        - name: redis
          image: redis
          volumeMounts:
            - name: redis-data
              mountPath: /data
      volumes:
        - name: redis-data
          persistentVolumeClaim:
            claimName: redis-data
---
apiVersion: v1
kind: Service
metadata:
  name: chrome
  namespace: hoarder
spec:
  selector:
    app: hoarder
    tier: chrome
  ports:
    - protocol: TCP
      port: 9222
      targetPort: 9222
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chrome
  namespace: hoarder
spec:
  selector:
    matchLabels:
      app: hoarder
      tier: chrome
  replicas: 1
  template:
    metadata:
      labels:
        app: hoarder
        tier: chrome
    spec:
      containers:
        - name: chrome
          image: chrome
          args:
            [
              "--no-sandbox",
              "--disable-gpu",
              "--remote-debugging-address=0.0.0.0",
              "--remote-debugging-port=9222",
            ]
---
apiVersion: v1
kind: Service
metadata:
  name: meilisearch
  namespace: hoarder
spec:
  selector:
    app: hoarder
    tier: meilisearch
  ports:
    - protocol: TCP
      port: 7700
      targetPort: 7700
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: meilisearch
  namespace: hoarder
spec:
  selector:
    matchLabels:
      app: hoarder
      tier: meilisearch
  replicas: 1
  template:
    metadata:
      labels:
        app: hoarder
        tier: meilisearch
    spec:
      containers:
        - name: meilisearch
          image: meilisearch
          volumeMounts:
            - name: meilisearch-data
              mountPath: /meili_data
      volumes:
        - name: meilisearch-data
          persistentVolumeClaim:
            claimName: meilisearch-data
---
apiVersion: v1
kind: Service
metadata:
  name: workers
  namespace: hoarder
spec:
  selector:
    app: hoarder
    tier: workers
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: workers
  namespace: hoarder
spec:
  selector:
    matchLabels:
      app: hoarder
      tier: workers
  replicas: 1
  template:
    metadata:
      labels:
        app: hoarder
        tier: workers
    spec:
      nodeSelector:
        kubernetes.io/arch: "amd64"
      containers:
        - name: workers
          image: hoarder-workers
          ports:
            - containerPort: 3000
          volumeMounts:
            - name: data
              mountPath: /data
          envFrom:
            - configMapRef:
                name: hoarder-config
            - secretRef:
                name: hoarder-secrets
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: data
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: hoarder-config
  namespace: hoarder
data:
  REDIS_HOST: "redis"
  REDIS_PORT: "6379"
  MEILI_ADDR: "http://meilisearch:7700"
  DATA_DIR: "/data"
  BROWSER_WEB_URL: "http://chrome:9222"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-data
  namespace: hoarder
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: meilisearch-data
  namespace: hoarder
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data
  namespace: hoarder
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
