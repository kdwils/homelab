apiVersion: v1
kind: Namespace
metadata:
  name: codeserver
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
  name: code-server
  namespace: codeserver
spec:
  ingressClassName: nginx
  rules:
    - host: code.int.kyledev.co
      http:
        paths:
          - backend:
              service:
                name: code-server
                port:
                  name: http
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - code.int.kyledev.co
      secretName: wildcard-kyledev-tls-prod
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: code-server
  name: code-server
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: code-server
  namespace: codeserver
  labels:
    app.kubernetes.io/name: code-server
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "10Gi"
---
apiVersion: v1
kind: Service
metadata:
  name: code-server
  labels:
    app.kubernetes.io/name: code-server
spec:
  type: ClusterIP
  ports:
    - port: 22
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: code-server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: code-server
  labels:
    app.kubernetes.io/name: code-server
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: code-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: code-server
    spec:
      imagePullSecrets: []
      securityContext:
        fsGroup: 1000
      initContainers:
        - name: init-chmod-data
          image: busybox:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - |
              chown -R 1000:1000 /home/code-server
          securityContext:
            runAsUser: 0
          volumeMounts:
            - name: data
              mountPath: /home/code-server
      containers:
        - name: code-server
          image: codeserver
          imagePullPolicy: Always
          volumeMounts:
            - name: data
              mountPath: /home/code-server
            - name: ssh-volume
              subPath: sshd_config
              mountPath: /etc/ssh/sshd_config
            - name: ssh-volume
              subPath: authorized_keys
              mountPath: /root/.ssh/authorized_keys
          ports:
            - name: http
              containerPort: 22
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources: {}
      serviceAccountName: code-server
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: code-server
        - name: ssh-volume
          configMap:
            name: ssh-config
      nodeSelector:
        kubernetes.io/hostname: "nuc"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ssh-config
data:
  sshd_config: |
    PasswordAuthentication no
    ChallengeResponseAuthentication no
    UsePAM no
  authorized_keys: |
    ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDZVyL80CpitMD2Gj3RdvoHguAOPElpFLCKgC+MCzlTJQNj9jE0iFv6QGPA2+yD6szWUBXz9QwvsJGTvNEucC7x1TK6iG8uUIXqU47lYg1f/nTLWuinKfbGHU02Lp+EqQ6YslU6wtbjjCpIxNm5/WSNrM3BVKBZLrmWQYqIM3NoKVypWYnAfi1GgC+HkhgQ7j5FYwVmF1w02eO2Z8zhOx0DA3OVbEHu8oXrg7KlpWnp6Glb4w+Wxje3RrreKmCukIkZpTvAA60Gwbu4ha/gdSP39UEGB+mvl0sNvSoAAsDQUbfk8DYF3uyVTuBgcuui7J21c524MTCb2VOddWIHQU3dwUOtyyYoSFypRl32DVZmsmA8WM5LK0eW4F1KedZGL/CBxBeZ4K3MHtdia0tl2TCaNtOHfYCDr6CTS+5/+P6gBwhQVfKIEZJi8exTMvexDkwQ0Or1/laVDFYjse6QoB5EUc3x3uzTbOJVZkYWCVAE26xpDflHO9aM5JgISJMuuPs= kyle.wilson@kyledev.co
