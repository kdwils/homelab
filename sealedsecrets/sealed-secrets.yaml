apiVersion: v1
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUUzRENDQXNRQ0NRRFk2TnozTUVldHZEQU5CZ2txaGtpRzl3MEJBUXNGQURBd01SWXdGQVlEVlFRRERBMXoKWldGc1pXUXRjMlZqY21WME1SWXdGQVlEVlFRS0RBMXpaV0ZzWldRdGMyVmpjbVYwTUI0WERUSXpNRFl4T1RFegpOVEV5TkZvWERUSTBNRFl4T0RFek5URXlORm93TURFV01CUUdBMVVFQXd3TmMyVmhiR1ZrTFhObFkzSmxkREVXCk1CUUdBMVVFQ2d3TmMyVmhiR1ZrTFhObFkzSmxkRENDQWlJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dJUEFEQ0MKQWdvQ2dnSUJBT045cUVEQjhSSGtaQXBDNHpkSU9OSVdqQ1ZsNjBYL0FKNGhLaHJlcC80RzdkZno4ZXh3YURLYgpkb3FOdi9XQUFMQTNXVlhkVGx4aXZpMDhBbVRZU3pNdEd5QjJMNUlQWmVCVkZQWnhJeEc3L0FRKy9OWlVCY0VVClN0ZXdsTDNIdzBzYnZrZFAxcGwwY0hldm9yMnFZTU5ZU1NESmpBR0ZzWVhWaGFQSnNCQS8wUE41UjdXVG5Fd2UKbHFiSXZPSEwxc3MzODV3N0VjNHZzVVB4TjNJSGkvOGFhWm1WTlQxRmMzQ2dkZjJaeHl0dXovU25wVTJaZm53KwpaRmkzbHljZkFUWERVSlVua0J6RGtqQmg2ZUtWVXZFRVFQWWNVNC9YQlZNWjJaeVVmdE9pTUV1Q3IvaGlCcE9iCjFXd242Vm9EOTZwT0pMd0ZyelQreTZMUFVHRWZ5dHBYL1JYZFplcldYSUFDRzhlUmFtbDdaMFhBSkFKNWFDM2UKZkd5M1NiYitxc0tSVGlyY2tvbU5FRCs1TCtraEkzMloxbEV2eWlmWjc5THJEWXJxYVhvWVRSNHRxYTYxOTdTTApMR0JOcUdTS1h0ZS8yS29NUEJSYlJMK0Q3c1F1WE9qTDFKTXdrazhnZ3dnWEMySzFSUFBLdmpiTU84bWNmb0FuCnh4YjBVZlFFYnhGTERwbithTVp2NDN5dVFEY1JkdDFQeE5zYXo0OFdxM0s5QmlXYVVCKzBoSE9BTmVCSVJ3ODMKOWdPU09QVTc1S3FudmFMZjlOaVkvZk84WDBPcFI0alRxUi90bFVkN1RSaUFQMUxLdm1PN2FDZEtkVnlaVEFYdgpudGhtd1J3aVR4Si8zbVViZmtuSmFUY2VPOGdmNEVhZnk0d3pSZHoxN040UFFlZkFOUXNaQWdNQkFBRXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0lCQUlUVjVoWDk0RTZ5azk5bm4xR0VUZFBlRmYwN2ViUFhXeC9NV3U2TGIvdW0KclY3MGtHeXlpMEQwOGQ1cTNGMERkOTNCVlIvaFZFb3E3bmtKRXk0N2thcGZLMHJsNklXbmVLRjB2ZEo3eUFzUAprQjBjS3NxRFZhaGR4TXlLbWpIWFE3VjBTWmN4WEc2cE8xTkFOUVBTaEVVUkIrd01ONk14M2VyZUlyTkxQYmVlCjVLaFBYcUtIUGxiNmFubjFUTytIZURZVjhJTkRjR2lMdk1vR3dTZ2hycFVLZXFZaTdFdUVGd2VYb1dVNy9abGUKSWpxTEhINXBEOXNURk40dFprQzAxRTVoSzlTbWd4Y2RoOE9ucDNkZWxNcS9VaUtYaHZHVDFXTWZSVkcrdzZHdgpKZHZuSFA2WlpSVlJ4VXpnODEySGtZYXhuZVFrU0t2Zmp2VDRTTjh6VW5yejUydk82V3gvL2x2SHppcGcrRzJKCmJCdS9qVkJyblpjRmd1OTJVcElneWRoYlYxaFhKRmtiOUtGWmkzWUhBRnJWbVVyQjZHM1FqN0RreTVwUVNNS2MKT2ZtSFNHL1RSSG9Gd2xHcmZTOXdsaWRONkhqNmRFb3Y0V1hLRGZ3bkdZaS9zSUlSMTBsREFYUExKTDdyZzdnKwo0eDNla29UR0JYWGtUNW81cElVYXM5SHh0OWptUUZtdEkxTjQxMzhWV0poRDhIblVtSDRDblNSQnQ3MmRUUW5zClAzb1BPN08wSmFJRGFaUkNlaS83WVFnOWdaNm43MkhZdUM5bXZvSTFMV3orL21lWHNvRlBJVlRHcUk3eHJlU2cKVUFGNjZjQkFMelMzZlhZRGlCYTA3NUU0bDMxaDdlaklzM3VWYmhNQVNFYkJVM2N3QmZDYWNVcitMSnJGcklRbAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUpRd0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQ1Mwd2dna3BBZ0VBQW9JQ0FRRGpmYWhBd2ZFUjVHUUsKUXVNM1NEalNGb3dsWmV0Ri93Q2VJU29hM3FmK0J1M1g4L0hzY0dneW0zYUtqYi8xZ0FDd04xbFYzVTVjWXI0dApQQUprMkVzekxSc2dkaStTRDJYZ1ZSVDJjU01SdS93RVB2eldWQVhCRkVyWHNKUzl4OE5MRzc1SFQ5YVpkSEIzCnI2SzlxbUREV0VrZ3lZd0JoYkdGMVlXanliQVFQOUR6ZVVlMWs1eE1IcGFteUx6aHk5YkxOL09jT3hIT0w3RkQKOFRkeUI0di9HbW1abFRVOVJYTndvSFg5bWNjcmJzLzBwNlZObVg1OFBtUll0NWNuSHdFMXcxQ1ZKNUFjdzVJdwpZZW5pbFZMeEJFRDJIRk9QMXdWVEdkbWNsSDdUb2pCTGdxLzRZZ2FUbTlWc0orbGFBL2VxVGlTOEJhODAvc3VpCnoxQmhIOHJhVi8wVjNXWHExbHlBQWh2SGtXcHBlMmRGd0NRQ2VXZ3QzbnhzdDBtMi9xckNrVTRxM0pLSmpSQS8KdVMvcElTTjltZFpSTDhvbjJlL1M2dzJLNm1sNkdFMGVMYW11dGZlMGl5eGdUYWhraWw3WHY5aXFERHdVVzBTLwpnKzdFTGx6b3k5U1RNSkpQSUlNSUZ3dGl0VVR6eXI0MnpEdkpuSDZBSjhjVzlGSDBCRzhSU3c2Wi9takdiK044CnJrQTNFWGJkVDhUYkdzK1BGcXR5dlFZbG1sQWZ0SVJ6Z0RYZ1NFY1BOL1lEa2pqMU8rU3FwNzJpMy9UWW1QM3oKdkY5RHFVZUkwNmtmN1pWSGUwMFlnRDlTeXI1anUyZ25TblZjbVV3Rjc1N1lac0VjSWs4U2Y5NWxHMzVKeVdrMwpIanZJSCtCR244dU1NMFhjOWV6ZUQwSG53RFVMR1FJREFRQUJBb0lDQVFDclZtankzUitFS2xCdXFoSVlBUDFLCnZsQ3ZtaU9waEhZaW96ZmpKTy9DRTlYdllIeEZhQ1FTZWFTK2xpU044dXFSemg0cTNaTzNZV2Q3Q2tlRFRLVFcKMXBJbjBOdmpWbFdVc0lBcFhPemMzb2poYWM5a1hjUTN0K0Rtc3NoVVo3QmZVWFh1bitNeGtORmtVNVJ1NVhRYgpyTkxuTHVXVC8rM0VyeDBJVDArYjdYU2k3Q1ZtVE5iYlBlNlpqM2N6V1NOZHk3WmZaTjMwUFZkMXBLZnQ2bUUyCnNkMzNIcm9LZTlTR2IxUnV2UE9WY3RDTm8vYU1pNThJVkxXZlhDY3IvOTRaY0JHeFJTcjFmeGNMK2JMK1JSbEQKRGNFZm5CWVRzQThDbCtXZVdQbHN6Q3N6dENwMUdOOTdMVk9CTWs0K3pkNHJGcy8wRFJQNUJpNjVZUXRaRzJqYgp2dUN6TWxodXdUaHhsUlc1bEpTS1J1Rm1Ea0Rxa3A2Z1J6bDhaR3BiSVd3WGgvMGpYZ3pUcFFJekdDUlhZTEdvCjIrTWQrNkpmZEMrdmZGNmE1bVEvby9oVHR4cm1NUFhOTFdET0o1dkp6SVBQdDRESVhBaVJZQTdJYjNJSnhSQ0gKdElTamFtVExteHg5Z2YrZnh4VHRERVF2M1hKb0FTYjdzQUJXK05pM2Y3aFIwTDI2WTcwamJVU2FxU0lYOU5zRApFbzk3bG9POWl4aGNXdkw0ZXoxRUlRMVdKTTJnRFN6MkZsbE9NRHpDZzRndGZLMXNWL1dGYzl5QkJHMkxDUU9kCk1ZMUZPQ0VXd2pXWUVOYTNocC8zY3ZrN1Mzem5GelplUDRHOVM1SnRZaHc0bkZrUm9ZUm5MMGN1b0c3RlRrMjAKbTJRemZBZzJtb1NCU1dYakt1ZHFRUUtDQVFFQStDRTlCL1BiQ2JHaG1IbUMvQUZ5WHNnSWtIYzkySFJrejJKbApSRDZKNi9tL0NQNGxHeTVpcHhDMWg4QU40S0tIQWoxRHpJL1hJbmdub29GVFR1M0trdW0rVVNlMHFtL0JsZjBlCkNETVowV0xNM2w1cUFMQVoxTGRWS3JvcngwZDZDWnErMWZucjUyTlp6dUQ2Wm9qS3hMQmNLQUx2V0owUG9SM0UKRmhSdEN1OGFxditnemhvSEtxWDJORUkyOWQ4TEw1MG5JMElCTXRQdjEwcGlCaUtwaE5uZlVrNU9sSFIwR2F4YwptNCtGUTlDRjNpVCszUURCUG5jRWJrd0ZFZUg5RGE4c1JIRjdRTHFKc283ZWtxekRHRkFMVUplQnVzTUpodllRCmsrSC9WRitqNmNpVk1HdFNQcVFwUHRySWRVaExGalpKd2NDN01rek8vaHU4c2d0RlB3S0NBUUVBNnJUVnFpYksKaXRORVBweDNVTFhsUzEwSS9nUHZ3dGdqSmJTRjdOT1VrdHlJY3VFRU5DZVE4S3d2Qm1uaVhNRDUxMWxha1VmegpLV2dNcEZYOS9lZUgrcG5GV2Z2a1BnRkhWWW1SRDQwWnVGVkVrK0w1Y1p3c2I2WUVYMS95ZkFaWXZnTkU0ZnJGCitPL0JZQ21SZzlHMjFZRE43ODZiYmQvMlZ3emR1NDR2SXI0eEtlVHRPMDRoRFc5R0F0aThXN2tPTjZBejVQZnEKbGs1Tm13MlJEVTAvUXI2ZmlXb1RMbnhlMnlpRXp2Q0o4T01EVWd1YmI3dkNmMGN0M21OOXRQSUFxeDV0eUU3MApTc1hlMlJCcnhNU01DdEdBSEcxNzFWWldxYmVtcFJFYXROTXBsV21pZU52ODFYWlFvandLdDlydklEdWxCbW1SCmNhb0oyWmpJek9KaHB3S0NBUUIwUm1jcUxkenIrd0NGeWhOV2Nuc2M3VklPR01Lemh6K2lhektYTzFNNGNJMVQKOG55QzgwYXBrVXZ2OUZETWZuMFQwSS9QOFd2WUxFUXVnN245VjdOQkN5WHpNODhXdTA0Vk1rcjdmcTdQanlQLwo1SEI2S0F2Q3diSzRWZ3VqMDl2ZFdsV3BRZmVKTStabTZzaU1lZmZER2YzbGhoS1JEUERCQ0lqVjYvWjVWRGpECi93eGs2SStKTGNKbEZNNWFnNDNqWHhwekRFQXhpRjF4SHRzMmt0R3Jmc21HOFVramlqckp1UnFnankzYzdIOSsKN1FrOW1WZjFKS0svNlFITE1vSjZBaWVWWHpScHpjQXZHNEl6YTUvMDZiV1RxNXZRWUFzNzRsMDhYNEJlRW45bQpVMmVPREF5N2JBUWovelJHdVh6dVNMeGhmaVo2Mk1GN0ZKWmxQS0RUQW9JQkFBcnNRNDFacE05MUtaWG9YajBwCldmUjU3Zk0wWjdJZnNQTU9SYlZSMjNaQ1FTOW5mWFNYNnN6b2xuK3I2ZGI3UENWamlTMTl0YmxWbUZFRmwzNTcKaWY2RnJZT1VqM2k3UW9DZW1GdXE2Mm1Ddm1CTGplUlZxbE8vM0RBOEhPTGN3TUNIRW11WjZpQzl0N2dyOXhPMQpiTmJlMmJheFhOWnVOOTZ4UUpoNzg0R2diRlZRekNHWWJ6MWEwbDFMak9pUDRqT0FoeW0reC9JYXpzM0tnZGVtCm9xME9oZ28xSDVOb1FsbmN0dUdTbkRqVHQ5SFhySEkwd01aL240amNCSHVwVDVLbkplRE9tOXZtL1lvSWs1dGkKc2tuR21qbTRkcXpsQ2I5NFJvOGtEcVFmdDYyMmJ0TkZHYTB0aG04bWNERkNSU0t3NCtzNmVvUlpyMytxOXAxaQpZNzBDZ2dFQkFJUW0yVmo4M1M4OUtFMU80NHpKRis1V2NtV2ttcW9MZUh2N2dkeG1vUDI1cDNlSmNNSHN5Q3FwCmxaVG5PdHdKK3ZWWitrMU05UlZpVUJHVTlkTUtvTWhsdmk3SlJCTktBZUREbVJGTFkreWVaQ2VuVmQ4QUlJdFEKMVdZbllMNGtpb2MwR3BsRHJ2YTlzQ1Q5MEFHVVl1aytjYmJDcjlHUjYxUFpha0U4NUt6QXMyMWdVbytIOFFqVApZZXl4ekZWemlycjdWYlV3RVpIOGFSWE1yb2wwdDM3a2paVDE3MnhpVStOdzNMK2FpTjkyMW5GSEtVYm5OVG9jCmpOMzFPUGJtUFd1MENnT3lidnA2TW9yVVNqVW9XdytoUDBBR05TRTVxd2xlbE5zbmdaOHd2QlAyMWFrdStEYnkKaWluTUlJQm4rYTJ2WFkwbU5zQmtwMWdxejZMQVRjND0KLS0tLS1FTkQgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  labels:
    sealedsecrets.bitnami.com/sealed-secrets-key: active
  name: custom-keys
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations: {}
  labels:
    name: sealed-secrets-controller
  name: sealed-secrets-controller
  namespace: kube-system
---
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  labels:
    name: sealed-secrets-controller
  name: sealed-secrets-controller
  namespace: kube-system
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    name: sealed-secrets-controller
  type: ClusterIP
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: {}
  labels:
    name: sealed-secrets-controller
  name: sealed-secrets-controller
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: sealed-secrets-key-admin
subjects:
  - kind: ServiceAccount
    name: sealed-secrets-controller
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: {}
  labels:
    name: sealed-secrets-service-proxier
  name: sealed-secrets-service-proxier
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: sealed-secrets-service-proxier
subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:authenticated
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: {}
  labels:
    name: sealed-secrets-service-proxier
  name: sealed-secrets-service-proxier
  namespace: kube-system
rules:
  - apiGroups:
      - ""
    resourceNames:
      - sealed-secrets-controller
    resources:
      - services
    verbs:
      - get
  - apiGroups:
      - ""
    resourceNames:
      - 'http:sealed-secrets-controller:'
      - http:sealed-secrets-controller:http
      - sealed-secrets-controller
    resources:
      - services/proxy
    verbs:
      - create
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: {}
  labels:
    name: sealed-secrets-key-admin
  name: sealed-secrets-key-admin
  namespace: kube-system
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - create
      - list
---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - clusterrole.yaml
  - clusterrolebinding.yaml
  - customresourcedefinition.yaml
  - deployment.yaml
  - role.yaml
  - rolebinding.yaml
  - service.yaml
  - serviceaccount.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  labels:
    name: sealed-secrets-controller
  name: sealed-secrets-controller
  namespace: kube-system
spec:
  minReadySeconds: 30
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      name: sealed-secrets-controller
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations: {}
      labels:
        name: sealed-secrets-controller
    spec:
      containers:
        - args: []
          command:
            - controller
          env: []
          image: docker.io/bitnami/sealed-secrets-controller:v0.22.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
          name: sealed-secrets-controller
          ports:
            - containerPort: 8080
              name: http
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
          securityContext:
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1001
          stdin: false
          tty: false
          volumeMounts:
            - mountPath: /tmp
              name: tmp
      imagePullSecrets: []
      initContainers: []
      securityContext:
        fsGroup: 65534
      serviceAccountName: sealed-secrets-controller
      terminationGracePeriodSeconds: 30
      volumes:
        - emptyDir: {}
          name: tmp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: sealedsecrets.bitnami.com
spec:
  group: bitnami.com
  names:
    kind: SealedSecret
    listKind: SealedSecretList
    plural: sealedsecrets
    singular: sealedsecret
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: SealedSecret is the K8s representation of a "sealed Secret" - a regular k8s Secret that has been sealed (encrypted) using the controller's key.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: SealedSecretSpec is the specification of a SealedSecret
              properties:
                data:
                  description: Data is deprecated and will be removed eventually. Use per-value EncryptedData instead.
                  format: byte
                  type: string
                encryptedData:
                  additionalProperties:
                    type: string
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                template:
                  description: Template defines the structure of the Secret that will be created from this sealed secret.
                  properties:
                    data:
                      additionalProperties:
                        type: string
                      description: Keys that should be templated using decrypted data
                      nullable: true
                      type: object
                    metadata:
                      description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
                      nullable: true
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          type: object
                        finalizers:
                          items:
                            type: string
                          type: array
                        labels:
                          additionalProperties:
                            type: string
                          type: object
                        name:
                          type: string
                        namespace:
                          type: string
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    type:
                      description: Used to facilitate programmatic handling of secret data.
                      type: string
                  type: object
              required:
                - encryptedData
              type: object
            status:
              description: SealedSecretStatus is the most recently observed status of the SealedSecret.
              properties:
                conditions:
                  description: Represents the latest available observations of a sealed secret's current state.
                  items:
                    description: SealedSecretCondition describes the state of a sealed secret at a certain point.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one status to another.
                        format: date-time
                        type: string
                      lastUpdateTime:
                        description: The last time this condition was updated.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      status:
                        description: 'Status of the condition for a sealed secret. Valid values for "Synced": "True", "False", or "Unknown".'
                        type: string
                      type:
                        description: 'Type of condition for a sealed secret. Valid value: "Synced"'
                        type: string
                    required:
                      - status
                      - type
                    type: object
                  type: array
                observedGeneration:
                  description: ObservedGeneration reflects the generation most recently observed by the sealed-secrets controller.
                  format: int64
                  type: integer
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: {}
  labels:
    name: sealed-secrets-controller
  name: sealed-secrets-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: secrets-unsealer
subjects:
  - kind: ServiceAccount
    name: sealed-secrets-controller
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: {}
  labels:
    name: secrets-unsealer
  name: secrets-unsealer
rules:
  - apiGroups:
      - bitnami.com
    resources:
      - sealedsecrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - bitnami.com
    resources:
      - sealedsecrets/status
    verbs:
      - update
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
