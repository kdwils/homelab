apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/instance: nats
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nats
    app.kubernetes.io/version: 2.9.15-alpine
    helm.sh/chart: nats-0.19.12
  name: nats
  namespace: nats
spec:
  podManagementPolicy: Parallel
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: nats
      app.kubernetes.io/name: nats
  serviceName: nats
  template:
    metadata:
      annotations:
        checksum/config: 295a83fc868f83a1bd45288fe1bfb34dfb62c68fc072c4b28db7ba72f2d58b54
        prometheus.io/path: /metrics
        prometheus.io/port: "7777"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/instance: nats
        app.kubernetes.io/name: nats
    spec:
      containers:
        - command:
            - nats-server
            - --config
            - /etc/nats-config/nats.conf
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: SERVER_NAME
              value: $(POD_NAME)
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CLUSTER_ADVERTISE
              value: $(POD_NAME).nats.$(POD_NAMESPACE).svc.cluster.local
          image: nats:2.9.17-alpine
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                  - nats-server
                  - -sl=ldm=/var/run/nats/nats.pid
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8222
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          name: nats
          ports:
            - containerPort: 4222
              name: client
            - containerPort: 6222
              name: cluster
            - containerPort: 8222
              name: monitor
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8222
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          startupProbe:
            failureThreshold: 90
            httpGet:
              path: /healthz
              port: 8222
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          volumeMounts:
            - mountPath: /etc/nats-config
              name: config-volume
            - mountPath: /var/run/nats
              name: pid
            - mountPath: /data
              name: nats-js-pvc
        - command:
            - nats-server-config-reloader
            - -pid
            - /var/run/nats/nats.pid
            - -config
            - /etc/nats-config/nats.conf
          image: natsio/nats-server-config-reloader:0.10.1
          imagePullPolicy: IfNotPresent
          name: reloader
          resources: {}
          volumeMounts:
            - mountPath: /etc/nats-config
              name: config-volume
            - mountPath: /var/run/nats
              name: pid
        - args:
            - -connz
            - -routez
            - -subz
            - -varz
            - -prefix=nats
            - -use_internal_server_id
            - -jsz=all
            - http://localhost:8222/
          image: natsio/prometheus-nats-exporter:0.11.0
          imagePullPolicy: IfNotPresent
          name: metrics
          ports:
            - containerPort: 7777
              name: metrics
          resources: {}
      dnsPolicy: ClusterFirst
      serviceAccountName: nats
      shareProcessNamespace: true
      terminationGracePeriodSeconds: 60
      volumes:
        - configMap:
            name: nats-config
          name: config-volume
        - emptyDir: {}
          name: pid
        - name: nats-js-pvc
          persistentVolumeClaim:
            claimName: jetstream
  volumeClaimTemplates: null
