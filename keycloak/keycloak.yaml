apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
spec:
  selector:
    matchLabels:
      app: keycloak
  replicas: 1
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      containers:
        - name: keycloak
          image: keycloak
          args: [start]
          env:
            - name: KEYCLOAK_USER
              valueFrom:
                secretKeyRef:
                  name: keycloak-secret
                  key: keycloak-user
            - name: KEYCLOAK_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak-secret
                  key: keycloak-password
            - name: KC_DB
              value: "mysql"
            - name: KC_DB_URL
              value: "jdbc:mysql://mysql:3306/keycloak?useSSL=false"
            - name: KC_DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-user
            - name: KC_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-password
            - name: KC_HOSTNAME
              value: "keycloak.int.kyledev.co"
            - name: KC_HTTPS_CERTIFICATE_FILE
              value: "/etc/x509/https/tls.crt"
            - name: KC_HTTPS_CERTIFICATE_KEY_FILE
              value: "/etc/x509/https/tls.key"
            - name: KC_HTTPS_TRUSTSTORE_FILE
              value: "/etc/x509/ca/truststore.jks"
            - name: KC_HTTPS_TRUSTSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak-secret
                  key: truststore-password
          ports:
            - containerPort: 8443
          readinessProbe:
            httpGet:
              path: /auth/realms/master
              port: 8443
              scheme: HTTPS
          livenessProbe:
            httpGet:
              path: /auth/
              port: 8443
              scheme: HTTPS
          volumeMounts:
            - name: cert-volume
              mountPath: "/etc/x509/https"
              readOnly: true
      volumes:
        - name: cert-volume
          secret:
            secretName: keycloak-tls
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak
spec:
  type: LoadBalancer
  loadBalancerClass: tailscale
  ports:
    - port: 8443
      targetPort: 8443
  selector:
    app: keycloak
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: keycloak-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
    - hosts:
        - keycloak.int.kyledev.co
      secretName: keycloak-tls
  rules:
    - host: keycloak.int.kyledev.co
      http:
        paths:
          - pathType: ImplementationSpecific
            path: "/"
            backend:
              service:
                name: keycloak
                port:
                  number: 8443
