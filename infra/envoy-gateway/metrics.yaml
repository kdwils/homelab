apiVersion: v1
kind: ServiceAccount
metadata:
  name: otel-collector
  namespace: envoy-gateway-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-collector
  namespace: envoy-gateway-system
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: opentelemetry-collector
      app.kubernetes.io/instance: envoy-addons
      component: standalone-collector
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/config: a211a0a7fd52efe5818f62e345c2f3919513a961ed40074a8629ec497fe36ff6
      labels:
        app.kubernetes.io/name: opentelemetry-collector
        app.kubernetes.io/instance: envoy-addons
        component: standalone-collector
    spec:
      serviceAccountName: otel-collector
      securityContext: {}
      containers:
        - name: opentelemetry-collector
          args:
            - --config=/conf/relay.yaml
          securityContext: {}
          image: "otel/opentelemetry-collector-contrib:0.121.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: envoy-als
              containerPort: 9000
              protocol: TCP
            - name: jaeger-compact
              containerPort: 6831
              protocol: UDP
            - name: jaeger-grpc
              containerPort: 14250
              protocol: TCP
            - name: jaeger-thrift
              containerPort: 14268
              protocol: TCP
            - name: otlp
              containerPort: 4317
              protocol: TCP
            - name: otlp-http
              containerPort: 4318
              protocol: TCP
            - name: zipkin
              containerPort: 9411
              protocol: TCP
          env:
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
          livenessProbe:
            httpGet:
              path: /
              port: 13133
          readinessProbe:
            httpGet:
              path: /
              port: 13133
          volumeMounts:
            - mountPath: /conf
              name: opentelemetry-collector-configmap
      volumes:
        - name: opentelemetry-collector-configmap
          configMap:
            name: otel-collector
            items:
              - key: relay
                path: relay.yaml
      hostNetwork: false
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-collector
  namespace: envoy-gateway-system
data:
  relay: |
    exporters:
      debug:
        verbosity: detailed
      loki:
        endpoint: http://loki.monitoring.svc:3100/loki/api/v1/push
      otlp:
        endpoint: tempo.monitoring.svc:4317
        tls:
          insecure: true
      prometheus:
        endpoint: '[${env:MY_POD_IP}]:19001'
    extensions:
      health_check:
        endpoint: '[${env:MY_POD_IP}]:13133'
    processors:
      attributes:
        actions:
        - action: insert
          key: loki.attribute.labels
          value: k8s.pod.name, k8s.namespace.name
      batch: {}
      memory_limiter:
        check_interval: 5s
        limit_percentage: 80
        spike_limit_percentage: 25
    receivers:
      datadog:
        endpoint: '[${env:MY_POD_IP}]:8126'
      envoyals:
        endpoint: '[${env:MY_POD_IP}]:9000'
      jaeger:
        protocols:
          grpc:
            endpoint: '[${env:MY_POD_IP}]:14250'
          thrift_compact:
            endpoint: '[${env:MY_POD_IP}]:6831'
          thrift_http:
            endpoint: '[${env:MY_POD_IP}]:14268'
      otlp:
        protocols:
          grpc:
            endpoint: '[${env:MY_POD_IP}]:4317'
          http:
            endpoint: '[${env:MY_POD_IP}]:4318'
      prometheus:
        config:
          scrape_configs:
          - job_name: opentelemetry-collector
            scrape_interval: 10s
            static_configs:
            - targets:
              - '[${env:MY_POD_IP}]:8888'
      zipkin:
        endpoint: '[${env:MY_POD_IP}]:9411'
    service:
      extensions:
      - health_check
      pipelines:
        logs:
          exporters:
          - loki
          processors:
          - attributes
          receivers:
          - otlp
          - envoyals
        metrics:
          exporters:
          - prometheus
          processors:
          - memory_limiter
          - batch
          receivers:
          - datadog
          - otlp
        traces:
          exporters:
          - otlp
          processors:
          - memory_limiter
          - batch
          receivers:
          - datadog
          - otlp
          - zipkin
      telemetry:
        metrics:
          level: none
          readers:
          - pull:
              exporter:
                prometheus:
                  host: localhost
                  port: 8888
