apiVersion: kargo.akuity.io/v1alpha1
kind: ClusterPromotionTask
metadata:
  name: render-helm-and-promote
spec:
  vars:
    - name: gitRepo
    - name: imageRepo
    - name: chartPath
    - name: targetBranch
    - name: appName
    - name: appNamespace
      value: argocd
  steps:
    - uses: git-clone
      config:
        repoURL: ${{ vars.gitRepo }}
        checkout:
          - commit: ${{ commitFrom(vars.gitRepo).ID }}
            path: ./src
          - branch: ${{ vars.targetBranch }}
            create: true
            path: ./target
    - uses: helm-update-chart
      config:
        path: ./src/${{ vars.chartPath }}
    - uses: helm-template
      config:
        path: ./src/${{ vars.chartPath }}
        valuesFiles:
          - ./src/environments/dev/values.yaml
        namespace: blog
        releaseName: blog-dev
        outPath: ./target/rendered/dev/manifest.yaml
    - uses: helm-template
      config:
        path: ./src/${{ vars.chartPath }}
        valuesFiles:
          - ./src/environments/prod/values.yaml
        namespace: blog
        releaseName: blog-prod
        outPath: ./target/rendered/prod/manifest.yaml
    - uses: git-commit
      config:
        path: ./target
        message: |
          Render Helm manifests for ${{ vars.targetBranch }}

          Image: ${{ imageFrom(vars.imageRepo).Tag }}
          Commit: ${{ commitFrom(vars.gitRepo).ID }}
    - uses: git-push
      as: push
      config:
        path: ./target
        generateTargetBranch: true
    - uses: git-open-pr
      as: open-pr
      config:
        repoURL: ${{ vars.gitRepo }}
        sourceBranch: ${{ task.outputs['push'].branch }}
        targetBranch: ${{ vars.targetBranch }}
        createTargetBranch: true
        title: "Render manifests to ${{ vars.targetBranch }} - ${{ imageFrom(vars.imageRepo).Tag }}"
        description: |
          **Image:** `${{ imageFrom(vars.imageRepo).Tag }}`
          **Source Commit:** `${{ commitFrom(vars.gitRepo).ID }}`
          This PR was automatically created by Kargo and will be auto-merged.
    - uses: git-merge-pr
      as: merge-pr
      config:
        repoURL: ${{ vars.gitRepo }}
        prNumber: ${{ task.outputs['open-pr'].pr.id }}
    - uses: argocd-update
      config:
        apps:
          - name: ${{ vars.appName }}
            namespace: ${{ vars.appNamespace }}
            sources:
              - repoURL: ${{ vars.gitRepo }}
                desiredRevision: ${{ task.outputs['merge-pr'].commit }}
                updateTargetRevision: true
