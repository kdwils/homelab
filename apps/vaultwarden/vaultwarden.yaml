---
# Source: vaultwarden/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vaultwarden-svc
  namespace: vaultwarden
  labels:
    app.kubernetes.io/component: vaultwarden
    helm.sh/chart: vaultwarden-0.32.1
    app.kubernetes.io/name: vaultwarden
    app.kubernetes.io/instance: vaultwarden
    app.kubernetes.io/version: "1.34.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: vaultwarden/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: vaultwarden
  namespace: vaultwarden
  labels:
    app.kubernetes.io/component: vaultwarden
    helm.sh/chart: vaultwarden-0.32.1
    app.kubernetes.io/name: vaultwarden
    app.kubernetes.io/instance: vaultwarden
    app.kubernetes.io/version: "1.34.1"
    app.kubernetes.io/managed-by: Helm
data:
  DOMAIN: "https://passwords.kyledev.co"
  SMTP_HOST: "smtp.google.com"
  SMTP_SECURITY: "force_tls"
  SMTP_PORT: "465"
  SMTP_AUTH_MECHANISM: "Plain"
  SMTP_FROM: "wilson15701@gmail.com"
  SMTP_FROM_NAME: "wilson15701@gmail.com"
  SMTP_DEBUG: "false"
  SMTP_ACCEPT_INVALID_HOSTNAMES: "false"
  SMTP_ACCEPT_INVALID_CERTS: "false"
  DATA_FOLDER: "/data"
  ROCKET_ADDRESS: "0.0.0.0"
  ROCKET_PORT: "8080"
  ROCKET_WORKERS: "10"
  SHOW_PASSWORD_HINT: "false"
  SIGNUPS_ALLOWED: "true"
  INVITATIONS_ALLOWED: "false"
  SIGNUPS_VERIFY: "true"
  WEB_VAULT_ENABLED: "true"
  DB_CONNECTION_RETRIES: "15"
  DATABASE_MAX_CONNS: "10"
  INVITATION_ORG_NAME: "Vaultwarden"
  ICON_BLACKLIST_NON_GLOBAL_IPS: "true"
  IP_HEADER: "X-Real-IP"
  ORG_EVENTS_ENABLED: "false"
  ORG_GROUPS_ENABLED: "false"
  SENDS_ALLOWED: "true"
  EMERGENCY_ACCESS_ALLOWED: "true"
  EMERGENCY_NOTIFICATION_REMINDER_SCHEDULE: "0 3 * * * *"
  EMERGENCY_REQUEST_TIMEOUT_SCHEDULE: "0 7 * * * *"
  EXTENDED_LOGGING: "true"
  LOG_TIMESTAMP_FORMAT: "%Y-%m-%d %H:%M:%S.%3f"
  ICON_SERVICE: "internal"
  ICON_REDIRECT_CODE: "302"
  INVITATION_EXPIRATION_HOURS: "120"
  REQUIRE_DEVICE_EMAIL: "false"
  TRASH_AUTO_DELETE_DAYS: ""
  EMAIL_CHANGE_ALLOWED: "true"
  ADMIN_RATELIMIT_SECONDS: "300"
  ADMIN_RATELIMIT_MAX_BURST: "3"
---
# Source: vaultwarden/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    helm.sh/resource-policy: keep
    meta.helm.sh/release-name: vaultwarden
    meta.helm.sh/release-namespace: vaultwarden
  labels:
    app.kubernetes.io/component: vaultwarden
    app.kubernetes.io/instance: vaultwarden
    app.kubernetes.io/name: vaultwarden
  name: vaultwarden-data-vaultwarden-0
  namespace: vaultwarden
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 15Gi
---
# Source: vaultwarden/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: vaultwarden
  namespace: vaultwarden
  labels:
    app.kubernetes.io/component: vaultwarden
    helm.sh/chart: vaultwarden-0.32.1
    app.kubernetes.io/name: vaultwarden
    app.kubernetes.io/instance: vaultwarden
    app.kubernetes.io/version: "1.34.1"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: ["extensions", "apps"]
    resources: ["deployments"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["create", "delete", "get", "list", "patch", "update", "watch"]
  - apiGroups: [""]
    resources: ["pods/exec"]
    verbs: ["create", "delete", "get", "list", "patch", "update", "watch"]
  - apiGroups: [""]
    resources: ["pods/log"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get"]
---
# Source: vaultwarden/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: vaultwarden
  namespace: vaultwarden
  labels:
    app.kubernetes.io/component: vaultwarden
    helm.sh/chart: vaultwarden-0.32.1
    app.kubernetes.io/name: vaultwarden
    app.kubernetes.io/instance: vaultwarden
    app.kubernetes.io/version: "1.34.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: vaultwarden
subjects:
  - kind: ServiceAccount
    name: vaultwarden-svc
---
# Source: vaultwarden/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: vaultwarden
  namespace: vaultwarden
  labels:
    app.kubernetes.io/component: vaultwarden
    helm.sh/chart: vaultwarden-0.32.1
    app.kubernetes.io/name: vaultwarden
    app.kubernetes.io/instance: vaultwarden
    app.kubernetes.io/version: "1.34.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: "ClusterIP"
  selector:
    app.kubernetes.io/component: vaultwarden
    app.kubernetes.io/name: vaultwarden
    app.kubernetes.io/instance: vaultwarden
  ports:
    - name: "http"
      port: 80
      protocol: TCP
      targetPort: 8080
  ipFamilyPolicy: SingleStack
---
# Source: vaultwarden/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vaultwarden
  namespace: vaultwarden
  labels:
    app.kubernetes.io/component: vaultwarden
    helm.sh/chart: vaultwarden-0.32.1
    app.kubernetes.io/name: vaultwarden
    app.kubernetes.io/instance: vaultwarden
    app.kubernetes.io/version: "1.34.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: vaultwarden
      app.kubernetes.io/name: vaultwarden
      app.kubernetes.io/instance: vaultwarden
  template:
    metadata:
      labels:
        app.kubernetes.io/component: vaultwarden
        app.kubernetes.io/name: vaultwarden
        app.kubernetes.io/instance: vaultwarden
      annotations:
        checksum/config: 35e7a80f50475236e5dfd8a26bdb2933d7972b5f
        checksum/secret: 5a54fcc833d82021ff9f0b6eb816baafa3323cd8
    spec:
      securityContext:
        fsGroup: 1001
        supplementalGroups:
          - 1001
      containers:
        - image: vaultwarden
          imagePullPolicy: IfNotPresent
          name: vaultwarden
          envFrom:
            - configMapRef:
                name: vaultwarden
          env:
            - name: SMTP_USERNAME
              valueFrom:
                secretKeyRef:
                  name: vaultwarden
                  key: smtpUsername
            - name: SMTP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: vaultwarden
                  key: smtpPassword
            - name: ADMIN_TOKEN
              valueFrom:
                secretKeyRef:
                  name: vaultwarden
                  key: adminToken
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          volumeMounts:
            - name: vaultwarden-data
              mountPath: /data
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
          livenessProbe:
            httpGet:
              path: /alive
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 10
          readinessProbe:
            httpGet:
              path: /alive
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
      serviceAccountName: vaultwarden-svc
      volumes:
        - name: vaultwarden-data
          persistentVolumeClaim:
            claimName: vaultwarden-data-vaultwarden-0
