apiVersion: apps/v1
kind: Deployment
metadata:
  name: tinyauth
  labels:
    app: tinyauth
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tinyauth
  template:
    metadata:
      labels:
        app: tinyauth
    spec:
      containers:
        - name: tinyauth
          image: tinyauth
          ports:
            - containerPort: 3000
          env:
            - name: APP_URL
              value: "http://tinyauth.int.kyledev.co"
            - name: SECRET
              valueFrom:
                secretKeyRef:
                  name: tinyauth
                  key: secretKey
            - name: USERS
              valueFrom:
                secretKeyRef:
                  name: tinyauth
                  key: users
          livenessProbe:
            httpGet:
              path: /api/healthcheck
              port: 3000
          readinessProbe:
            httpGet:
              path: /api/healthcheck
              port: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: tinyauth
spec:
  selector:
    app: tinyauth
  ports:
    - name: http
      port: 3000
      targetPort: 3000
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: tinyauth
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    ingress.kubernetes.io/secure-backends: "true"
  labels:
    app: tinyauth-ingress
spec:
  ingressClassName: nginx
  rules:
    - host: tinyauth.int.kyledev.co
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: tinyauth
                port:
                  number: 3000
  tls:
    - hosts:
        - tinyauth.int.kyledev.co
      secretName: tinyauth-kyledev-tls-prod
