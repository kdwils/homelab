---
# Source: wiki/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: wiki
  labels:
    helm.sh/chart: wiki-2.2.20
    app.kubernetes.io/name: wiki
    app.kubernetes.io/instance: wiki
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
---
# Source: wiki/charts/postgresql/templates/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: wiki-postgresql-headless
  labels:
    app: postgresql
    chart: postgresql-6.5.0
    release: "wiki"
    heritage: "Helm"
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - name: postgresql
    port: 5432
    targetPort: postgresql
  selector:
    app: postgresql
    release: "wiki"
---
# Source: wiki/charts/postgresql/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: wiki-postgresql
  labels:
    app: postgresql
    chart: postgresql-6.5.0
    release: "wiki"
    heritage: "Helm"
spec:
  type: ClusterIP
  ports:
  - name: postgresql
    port: 5432
    targetPort: postgresql
  selector:
    app: postgresql
    release: "wiki"
    role: master
---
# Source: wiki/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: wiki
  labels:
    helm.sh/chart: wiki-2.2.20
    app.kubernetes.io/name: wiki
    app.kubernetes.io/instance: wiki
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
    - port: 443
      targetPort: http
      protocol: TCP
      name: https
  selector:
    app.kubernetes.io/name: wiki
    app.kubernetes.io/instance: wiki
---
# Source: wiki/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wiki
  labels:
    helm.sh/chart: wiki-2.2.20
    app.kubernetes.io/name: wiki
    app.kubernetes.io/instance: wiki
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: wiki
      app.kubernetes.io/instance: wiki
  template:
    metadata:
      labels:
        app.kubernetes.io/name: wiki
        app.kubernetes.io/instance: wiki
    spec:
      serviceAccountName: wiki
      securityContext:
        {}
      initContainers:
        - name: wiki-sideload
          image: "requarks/wiki:latest"
          imagePullPolicy: IfNotPresent
          env:
            []
          command: [ "sh", "-c" ]
          args: [ "mkdir -p /wiki/data/sideload && git clone --depth=1 https://github.com/Requarks/wiki-localization /wiki/data/sideload/" ]
      containers:
        - name: wiki
          securityContext:
            {}
          image: "requarks/wiki:latest"
          imagePullPolicy: IfNotPresent
          env:
            - name: DB_TYPE
              value: postgres
            - name: DB_HOST
              value: wiki-postgresql
            - name: DB_PORT
              value: "5432"
            - name: DB_NAME
              value: wiki
            - name: DB_USER
              value: postgres
            - name: DB_SSL
              value: "false"
            - name: DB_SSL_CA
              value: ""
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: wiki-postgresql
                  key: "postgresql-password"
            - name: HA_ACTIVE
              value: "false"
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
          startupProbe:
            failureThreshold: 60
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 15
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            {}
---
# Source: wiki/charts/postgresql/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: wiki-postgresql
  labels:
    app: postgresql
    chart: postgresql-6.5.0
    release: "wiki"
    heritage: "Helm"
spec:
  serviceName: wiki-postgresql-headless
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: postgresql
      release: "wiki"
      role: master
  template:
    metadata:
      name: wiki-postgresql
      labels:
        app: postgresql
        chart: postgresql-6.5.0
        release: "wiki"
        heritage: "Helm"
        role: master
    spec:      
      securityContext:
        fsGroup: 1001
      initContainers:
      - name: init-chmod-data
        image: docker.io/bitnami/minideb:stretch
        imagePullPolicy: "Always"
        resources:
          requests:
            cpu: 250m
            memory: 256Mi
        command:
          - sh
          - -c
          - |
            mkdir -p /bitnami/postgresql/data
            chmod 700 /bitnami/postgresql/data
            find /bitnami/postgresql -mindepth 0 -maxdepth 1 -not -name ".snapshot" -not -name "lost+found" | \
              xargs chown -R 1001:1001
        securityContext:
          runAsUser: 0
        volumeMounts:
        - name: data
          mountPath: /bitnami/postgresql
          subPath: 
      containers:
      - name: wiki-postgresql
        image: docker.io/bitnami/postgresql:11.5.0-debian-9-r60
        imagePullPolicy: "IfNotPresent"
        resources:
          requests:
            cpu: 250m
            memory: 256Mi
        securityContext:
          runAsUser: 1001
        env:
        - name: BITNAMI_DEBUG
          value: "false"
        - name: POSTGRESQL_PORT_NUMBER
          value: "5432"
        - name: POSTGRESQL_VOLUME_DIR
          value: "/bitnami/postgresql"
        - name: PGDATA
          value: "/bitnami/postgresql/data"
        - name: POSTGRES_USER
          value: "postgres"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: wiki-postgresql
              key: postgresql-password
        - name: POSTGRES_DB
          value: "wiki"
        ports:
        - name: postgresql
          containerPort: 5432
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready -U "postgres" -d "wiki" -h 127.0.0.1 -p 5432
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - -e
            - |
              pg_isready -U "postgres" -d "wiki" -h 127.0.0.1 -p 5432
              [ -f /opt/bitnami/postgresql/tmp/.initialized ]
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        volumeMounts:
        - name: data
          mountPath: /bitnami/postgresql
          subPath: 
      volumes:
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
---
# Source: wiki/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: wiki
  labels:
    helm.sh/chart: wiki-2.2.20
    app.kubernetes.io/name: wiki
    app.kubernetes.io/instance: wiki
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - "wiki.int.kyledev.co"
      secretName: wikijs-ingress-cert
  rules:
    - host: "wiki.int.kyledev.co"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: wiki
                port:
                  number: 80
---
# Source: wiki/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "wiki-test-connection"
  labels:
    helm.sh/chart: wiki-2.2.20
    app.kubernetes.io/name: wiki
    app.kubernetes.io/instance: wiki
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['wiki:80']
  restartPolicy: Never
